/*****************************************************************************
* If not stated otherwise in this file or this component's LICENSE file the
* following copyright and licenses apply:
*
* Copyright 2021 Liberty Global Service B.V.#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************/

/**
@startuml

[->  Decoder : process()

Decoder -> Parser : process()

Parser  -> Parser : dataProcessedFlag = false

Parser  -> DecoderClient : getStc()
Parser <-- DecoderClient : stc

loop packet processing

Parser  -> PesBuffer : getNextPacket()
Parser <-- PesBuffer : exist, header, data

alt has next packet

Parser  -> PacketHeader : getPts()
Parser <-- PacketHeader : pts

alt pts + delta >= stc

Parser -> Parser : dataProcessedFlag = true

Parser -> Parser : parsePacket()
note right : returns success/error\n information

alt on success

Parser  -> PesBuffer : markPacketConsumed()
Parser <-- PesBuffer

else on error

Parser  -> Database : reset()
Parser <-- Database

Parser  -> PesBuffer : reset()
Parser <-- PesBuffer

Decoder <-- Parser : dataProcessedFlag

end

else pts + delta < stc

Decoder <-- Parser : dataProcessedFlag

end

else no more packets

Decoder <-- Parser : dataProcessedFlag

end

end 

Decoder  -> Presenter : isRedrawNeeded()
Decoder <-- Presenter : redrawFlag

[<-- Decoder : dataProcessedFlag | redrawFlag

@enduml
*/
